[
    {
        "id": "example-flow",
        "type": "tab",
        "label": "File Template Example",
        "disabled": false,
        "info": "Example flow demonstrating the node-red-contrib-file-template node usage"
    },
    {
        "id": "inject-data",
        "type": "inject",
        "z": "example-flow",
        "name": "Sample Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"Project Dashboard\",\"subtitle\":\"Real-time project monitoring and analytics\",\"stats\":{\"total\":45,\"completed\":32,\"pending\":13,\"progress\":71},\"user\":{\"name\":\"John Doe\",\"email\":\"john.doe@example.com\",\"role\":\"Project Manager\",\"lastLogin\":\"2024-01-15 09:30 AM\"},\"description\":\"This dashboard provides an overview of your current project status, including completed tasks, pending items, and overall progress metrics.\",\"status\":\"Active\",\"project\":{\"name\":\"Website Redesign\",\"status\":\"In Progress\"},\"lastUpdated\":\"2024-01-15 14:45:00\"}",
        "payloadType": "json",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "file-template-node"
            ]
        ]
    },
    {
        "id": "file-template-node",
        "type": "file-template",
        "z": "example-flow",
        "name": "Dashboard Template",
        "filename": "",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<style>.dashboard{font-family:Arial,sans-serif;padding:20px;background:#f5f5f5;border-radius:8px;box-shadow:0 2px 4px rgba(0,0,0,0.1)}.header{background:#1976d2;color:white;padding:15px;border-radius:8px;margin-bottom:20px}.stats{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:15px;margin-bottom:20px}.stat-card{background:white;padding:15px;border-radius:8px;text-align:center;box-shadow:0 1px 3px rgba(0,0,0,0.1)}.stat-value{font-size:24px;font-weight:bold;color:#1976d2}.content{background:white;padding:20px;border-radius:8px;box-shadow:0 1px 3px rgba(0,0,0,0.1)}</style><div class=\"dashboard\"><div class=\"header\"><h1>{{title}}</h1><p>{{subtitle}}</p></div><div class=\"stats\"><div class=\"stat-card\"><div class=\"stat-value\">{{stats.total}}</div><div>Total</div></div><div class=\"stat-card\"><div class=\"stat-value\">{{stats.completed}}</div><div>Completed</div></div><div class=\"stat-card\"><div class=\"stat-value\">{{stats.pending}}</div><div>Pending</div></div><div class=\"stat-card\"><div class=\"stat-value\">{{stats.progress}}%</div><div>Progress</div></div></div><div class=\"content\"><p>Welcome <strong>{{user.name}}</strong>!</p><p>Email: {{user.email}} | Role: {{user.role}}</p><p>{{description}}</p><p><strong>Status:</strong> {{status}} | <strong>Project:</strong> {{project.name}}</p><p><small>Last updated: {{lastUpdated}}</small></p></div></div>",
        "field": "payload",
        "fieldType": "msg",
        "output": "str",
        "x": 350,
        "y": 200,
        "wires": [
            [
                "debug-output",
                "http-response"
            ]
        ]
    },
    {
        "id": "debug-output",
        "type": "debug",
        "z": "example-flow",
        "name": "Template Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "template",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 160,
        "wires": []
    },
    {
        "id": "http-in",
        "type": "http in",
        "z": "example-flow",
        "name": "Dashboard Request",
        "url": "/dashboard",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "prepare-data"
            ]
        ]
    },
    {
        "id": "prepare-data",
        "type": "function",
        "z": "example-flow",
        "name": "Prepare Dashboard Data",
        "func": "// Simulate fetching data from database or API\nconst now = new Date();\n\nmsg.payload = {\n    title: \"Live Dashboard\",\n    subtitle: \"Real-time monitoring - \" + now.toLocaleString(),\n    stats: {\n        total: Math.floor(Math.random() * 100) + 50,\n        completed: Math.floor(Math.random() * 40) + 20,\n        pending: Math.floor(Math.random() * 20) + 5,\n        progress: Math.floor(Math.random() * 40) + 60\n    },\n    user: {\n        name: \"Dynamic User\",\n        email: \"user@example.com\",\n        role: \"Admin\",\n        lastLogin: now.toLocaleString()\n    },\n    description: \"This is a dynamically generated dashboard showing real-time data.\",\n    status: \"Live\",\n    project: {\n        name: \"Node-RED Dashboard\",\n        status: \"Active\"\n    },\n    lastUpdated: now.toISOString()\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 280,
        "wires": [
            [
                "file-template-node"
            ]
        ]
    },
    {
        "id": "http-response",
        "type": "http response",
        "z": "example-flow",
        "name": "Send HTML",
        "statusCode": "",
        "headers": {
            "content-type": "text/html"
        },
        "x": 570,
        "y": 240,
        "wires": []
    },
    {
        "id": "file-watcher-demo",
        "type": "inject",
        "z": "example-flow",
        "name": "Test File Watching",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"title\":\"File Watch Test\",\"subtitle\":\"This will update when template file changes\",\"stats\":{\"total\":10,\"completed\":8,\"pending\":2,\"progress\":80},\"user\":{\"name\":\"Test User\",\"email\":\"test@example.com\",\"role\":\"Developer\",\"lastLogin\":\"Just now\"},\"description\":\"Edit the template file and watch this update automatically!\",\"status\":\"Testing\",\"project\":{\"name\":\"File Watching Demo\",\"status\":\"Active\"},\"lastUpdated\":\"Live updates\"}",
        "payloadType": "json",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "file-template-node"
            ]
        ]
    },
    {
        "id": "metadata-debug",
        "type": "debug",
        "z": "example-flow",
        "name": "File Metadata",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "_fileTemplate",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 320,
        "wires": []
    },
    {
        "id": "comment-1",
        "type": "comment",
        "z": "example-flow",
        "name": "Basic Usage: Inject data and see template output",
        "info": "Click the inject button to send sample data through the file-template node.\nThe output will show the processed HTML template.",
        "x": 240,
        "y": 120,
        "wires": []
    },
    {
        "id": "comment-2",
        "type": "comment",
        "z": "example-flow",
        "name": "HTTP Endpoint: Visit http://localhost:1880/dashboard",
        "info": "This creates a web endpoint that serves the dashboard.\nVisit http://localhost:1880/dashboard to see the rendered template.",
        "x": 270,
        "y": 400,
        "wires": []
    },
    {
        "id": "comment-3",
        "type": "comment",
        "z": "example-flow",
        "name": "File Watching: Create your own template file to test auto-reload",
        "info": "This inject runs every 5 seconds. To test file watching:\n1. Create a template file (e.g., 'my-template.html')\n2. Edit the file-template node to use your file path\n3. Edit the template file and watch output update automatically when you save changes.",
        "x": 280,
        "y": 460,
        "wires": []
    }
] 
